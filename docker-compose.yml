version: "3.8"
services:
  db:
    image: postgres:15.5
    restart: always
    environment:
      # Generally speaking postgres recommends the explicit usage of password/user 
      # instead of trusting all connections 
      - POSTGRES_PASSWORD=password
      # I defined a database `app` for postgres to create I think the connection will fail without this
      # since the connection url is targetting a non-existant database before this change.
      - POSTGRES_DB=app
      - POSTGRES_USER=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    expose:
    # expose will prepare the containers to start listening/sending on this port
      - 5432
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
  mail:
    image: dockage/mailcatcher:0.9.0
    ports:
      - 1025:1025
      - 1080:1080

  # Wait for RabbitMQ to be joinable.
  check-postgres-started: 
    image: jwilder/dockerize:0.6.1
    depends_on:
      - db
    command: 'dockerize -wait=tcp://db:5432'
  
  server:
    build: .
    command: bash -l -c "while !</dev/tcp/db/5432; do sleep 1; done; npm install && npm run start:dev"
    environment:
      # the url below connects to the db without ssl but using a password/user which 
      # is usually the pattern for the local dev/container connections
      - DATABASE_URL=postgres://postgres:password@db/app?sslmode=disable
      - SMTP_HOST=mail
      - SMTP_PORT=1025
      - SMTP_USER=
      - SMTP_PASS=
    ports:
      - 5000:5000 # vite
      - 5100:5100 # fastify
      - 5555:5555 # prisma
      - 6006:6006 # storybook
    depends_on:
      - check-postgres-started
      - db
      - mail
    volumes:
      - .:/opt/node/app
      - /opt/node/app/node_modules
      - /opt/node/app/client/node_modules
      - /opt/node/app/server/node_modules
